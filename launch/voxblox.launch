<?xml version="1.0"?>
<launch>
	<arg name="pkg" value="multi_drone_inspection" />
	<arg name="pkg_path" value="$(find multi_drone_inspection)" />
	<arg name="robot_name" default="my_robot" />

	<include file="$(find realsense_ros_gazebo)/launch/simulation.launch" />

	<node name="voxblox_tester" pkg="$(arg pkg)" type="test_voxblox" output="screen" respawn="false" respawn_delay="0">
		<rosparam command="load" file="$(arg pkg_path)/launch/voxblox.rosparam.yaml" />
	</node>

	<arg name="voxel_size" default="0.20" />
	<arg name="voxels_per_side" default="16" />
	<arg name="world_frame" default="base_link" />
	<node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="log" args="-alsologtostderr" clear_params="true">
		<remap from="pointcloud" to="/d435/depth/color/points" />
		<remap from="voxblox_node/esdf_map_out" to="esdf_map" />
		<param name="tsdf_voxel_size" value="$(arg voxel_size)" />
		<param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
		<param name="publish_esdf_map" value="true" />
		<param name="publish_pointclouds" value="true" />
		<param name="use_tf_transforms" value="true" />
		<param name="update_mesh_every_n_sec" value="1.0" />
		<param name="clear_sphere_for_planning" value="true" />
		<param name="world_frame" value="$(arg world_frame)" />
	</node>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg pkg_path)/rviz/test_voxblox.rviz" />

</launch>
